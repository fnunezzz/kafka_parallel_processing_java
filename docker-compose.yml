version: '3'

services:
  postgres:
      container_name: postgres_kafka_parallel_processing_java
      image: postgres:12
      environment:
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        PGUSER: postgres
      logging:
        options:
          max-size: 10m
          max-file: "3"
      ports:
        - '5432:5432'
      volumes: 
        - ./.postgres:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 10s
        timeout: 5s
        retries: 5
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka0:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka0
    volumes:
      - ./update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
    ports:
      - "9092:9092"
      - "9997:9997"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://172.17.0.1:9092,PLAINTEXT://kafka0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997
      KAFKA_CLUSTER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: 'PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka0:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else chmod +x /tmp/* && /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
  #########
  #########
  # To many issues with multicluster locally, with rebalancing and leader election. KISS. Keep. It. Simples. Stupid
  #########
  #########
  # kafka2:
  #   image: confluentinc/cp-kafka:7.3.2
  #   container_name: kafka2
  #   volumes:
  #     - ./update_run.sh:/tmp/update_run.sh
  #     - ./clusterID:/tmp/clusterID
  #   ports:
  #     - "9093:9092"
  #     - "9998:9997"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://172.17.0.1:9092,PLAINTEXT://kafka2:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_JMX_PORT: 9997
  #     KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka2 -Dcom.sun.management.jmxremote.rmi.port=9997
  #     KAFKA_CLUSTER_ID: 2
  #     KAFKA_NODE_ID: 2
  #     KAFKA_LISTENERS: 'PLAINTEXT://kafka2:29092,CONTROLLER://kafka2:29093,PLAINTEXT_HOST://0.0.0.0:9092'
  #     KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
  #     KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka0:29093'
  #     KAFKA_PROCESS_ROLES: 'broker'
  #     KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  #   command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else chmod +x /tmp/* && /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
  # kafka3:
  #   image: confluentinc/cp-kafka:7.3.2
  #   container_name: kafka3
  #   volumes:
  #     - ./update_run.sh:/tmp/update_run.sh
  #     - ./clusterID:/tmp/clusterID
  #   ports:
  #     - "9094:9092"
  #     - "9999:9997"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://172.17.0.1:9092,PLAINTEXT://kafka3:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_JMX_PORT: 9997
  #     KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka3 -Dcom.sun.management.jmxremote.rmi.port=9997
  #     KAFKA_CLUSTER_ID: 3
  #     KAFKA_NODE_ID: 3
  #     KAFKA_LISTENERS: 'PLAINTEXT://kafka3:29092,CONTROLLER://kafka3:29093,PLAINTEXT_HOST://0.0.0.0:9092'
  #     KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
  #     KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka0:29093'
  #     KAFKA_PROCESS_ROLES: 'broker'
  #     KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  #   command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else chmod +x /tmp/* && /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
  
  schemaregistry1:
      container_name: schema-registry
      image: confluentinc/cp-schema-registry:7.2.1
      ports:
        - 8081:8081
      depends_on:
        - kafka0
      environment:
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka0:29092
        SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
        SCHEMA_REGISTRY_HOST_NAME: schemaregistry1
        SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
        SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
        SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
        SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
  # schemaregistry2:
  #     image: confluentinc/cp-schema-registry:7.2.1
  #     ports:
  #       - 8086:8081
  #     depends_on:
  #       - kafka2
  #     environment:
  #       SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka2:29092
  #       SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
  #       SCHEMA_REGISTRY_HOST_NAME: schemaregistry2
  #       SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
  #       SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
  #       SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
  #       SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
  # schemaregistry3:
  #     image: confluentinc/cp-schema-registry:7.2.1
  #     ports:
  #       - 8087:8081
  #     depends_on:
  #       - kafka3
  #     environment:
  #       SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka3:29092
  #       SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
  #       SCHEMA_REGISTRY_HOST_NAME: schemaregistry3
  #       SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
  #       SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
  #       SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
  #       SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas

  kafka-connect:
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:6.0.1
    ports:
      - 8083:8083
    depends_on:
      - kafka0
      - schemaregistry1
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka0:29092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry1:8081
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry1:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka0
      - schemaregistry1
      - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka0:29092 #,PLAINTEXT://kafka2:29092,PLAINTEXT://kafka3:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry1:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.3.2
    volumes:
       - ./message.json:/data/message.json
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && sleep 10 && \
               cub kafka-ready -b kafka0:29092 1 30 && \
               kafka-topics --create --topic books --partitions 5 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"